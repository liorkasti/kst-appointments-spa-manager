{"ast":null,"code":"var _s = $RefreshSig$();\nimport { axiosInstance } from '../../../axiosInstance';\nimport { queryKeys } from '../../../react-query/constants';\nimport { useCustomToast } from '../../app/hooks/useCustomToast';\n\n// for when server call is needed\nasync function removeAppointmentUser(appointment) {\n  const patchData = [{\n    op: 'remove',\n    path: '/userId'\n  }];\n  await axiosInstance.patch(`/appointment/${appointment.id}`, {\n    data: patchData\n  });\n}\n\n// TODO: update return type\nexport function useCancelAppointment() {\n  _s();\n  const toast = useCustomToast();\n  const queryClient = useQueryClient();\n  const {\n    mutate\n  } = useMutation(removeAppointmentUser(appointment), {\n    onSuccess: () => {\n      queryClient.invalidateQueries([queryKeys.appointments]);\n      toast({\n        title: 'You have canceled the appointment!',\n        status: 'warning'\n      });\n    }\n  });\n  return mutate;\n}\n_s(useCancelAppointment, \"5+/i7P7x/0kCNYxxAhRcSfpmsIM=\", true, function () {\n  return [useCustomToast];\n});","map":{"version":3,"names":["axiosInstance","queryKeys","useCustomToast","removeAppointmentUser","appointment","patchData","op","path","patch","id","data","useCancelAppointment","_s","toast","queryClient","useQueryClient","mutate","useMutation","onSuccess","invalidateQueries","appointments","title","status"],"sources":["/Users/liorkastenbaum/Repos/kst-appointments-manager-app/client/src/components/appointments/hooks/useCancelAppointment.ts"],"sourcesContent":["import { Appointment } from '../../../../../shared/types';\nimport { axiosInstance } from '../../../axiosInstance';\nimport { queryKeys } from '../../../react-query/constants';\nimport { useCustomToast } from '../../app/hooks/useCustomToast';\n\n// for when server call is needed\nasync function removeAppointmentUser(appointment: Appointment): Promise<void> {\n  const patchData = [{ op: 'remove', path: '/userId' }];\n  await axiosInstance.patch(`/appointment/${appointment.id}`, {\n    data: patchData,\n  });\n}\n\n// TODO: update return type\nexport function useCancelAppointment(): UseMutateFunction<\n  void,\n  unknown,\n  Appointment,\n  unknown\n> {\n  const toast = useCustomToast();\n  const queryClient = useQueryClient();\n\n  const { mutate } = useMutation(removeAppointmentUser(appointment), {\n    onSuccess: () => {\n      queryClient.invalidateQueries([queryKeys.appointments]);\n      toast({\n        title: 'You have canceled the appointment!',\n        status: 'warning',\n      });\n    },\n  });\n  return mutate;\n}\n"],"mappings":";AACA,SAASA,aAAa,QAAQ,wBAAwB;AACtD,SAASC,SAAS,QAAQ,gCAAgC;AAC1D,SAASC,cAAc,QAAQ,gCAAgC;;AAE/D;AACA,eAAeC,qBAAqBA,CAACC,WAAwB,EAAiB;EAC5E,MAAMC,SAAS,GAAG,CAAC;IAAEC,EAAE,EAAE,QAAQ;IAAEC,IAAI,EAAE;EAAU,CAAC,CAAC;EACrD,MAAMP,aAAa,CAACQ,KAAK,CAAE,gBAAeJ,WAAW,CAACK,EAAG,EAAC,EAAE;IAC1DC,IAAI,EAAEL;EACR,CAAC,CAAC;AACJ;;AAEA;AACA,OAAO,SAASM,oBAAoBA,CAAA,EAKlC;EAAAC,EAAA;EACA,MAAMC,KAAK,GAAGX,cAAc,CAAC,CAAC;EAC9B,MAAMY,WAAW,GAAGC,cAAc,CAAC,CAAC;EAEpC,MAAM;IAAEC;EAAO,CAAC,GAAGC,WAAW,CAACd,qBAAqB,CAACC,WAAW,CAAC,EAAE;IACjEc,SAAS,EAAEA,CAAA,KAAM;MACfJ,WAAW,CAACK,iBAAiB,CAAC,CAAClB,SAAS,CAACmB,YAAY,CAAC,CAAC;MACvDP,KAAK,CAAC;QACJQ,KAAK,EAAE,oCAAoC;QAC3CC,MAAM,EAAE;MACV,CAAC,CAAC;IACJ;EACF,CAAC,CAAC;EACF,OAAON,MAAM;AACf;AAACJ,EAAA,CAnBeD,oBAAoB;EAAA,QAMpBT,cAAc;AAAA"},"metadata":{},"sourceType":"module"}